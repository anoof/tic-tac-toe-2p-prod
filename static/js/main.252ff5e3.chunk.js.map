{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","width","height","display","gridTemplate","Board","squares","map","square","i","styles","margin","flexDirection","alignItems","Game","useState","Array","fill","board","setBoard","xIsNext","setXisNext","winner","lines","length","a","b","c","includes","calculateWinner","boardCopy","App","ReactDOM","render","document","getElementById"],"mappings":"sLAEMA,EAAQ,CACVC,WAAY,YACZC,OAAQ,kBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QASEC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACX,wBAAQT,MAAOA,EAAOS,QAASA,EAA/B,SACKD,KCVHR,EAAQ,CACVE,OAAQ,kBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,aAAc,mCAUHC,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,QAAZ,OACV,qBAAKT,MAAOA,EAAZ,SACKgB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,cAAC,EAAD,CAAgBX,MAAOU,EAAQT,QAAS,kBAAMA,EAAQU,KAAzCA,SCVzB,IAAMC,EAAS,CACXT,MAAO,QACPU,OAAQ,YACRR,QAAS,OACTS,cAAe,SACfC,WAAY,UAkCDC,EA/BF,WACT,MAA0BC,mBAASC,MAAM,GAAGC,KAAK,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,ECfH,SAAyBhB,GAW5B,IAVA,IAAMiB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFd,EAAI,EAAGA,EAAIc,EAAMC,OAAQf,IAAK,CACnC,kBAAkBc,EAAMd,GAAxB,GAAOgB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GAClE,OAAOrB,EAAQmB,GAEnB,IAAKnB,EAAQsB,SAAS,MAClB,MAAO,OAGf,OAAO,KDLQC,CAAgBX,GAkB/B,OACI,qCACI,cAAC,EAAD,CAAOZ,QAASY,EAAOnB,QAlBX,SAAAU,GAChB,IAAMqB,EAAS,YAAOZ,GAElBI,GAAUQ,EAAUrB,KAExBqB,EAAUrB,GAAKW,EAAU,IAAM,IAC/BD,EAASW,GACTT,GAAYD,OAYR,sBAAK9B,MAAOoB,EAAZ,UACI,4BAAIY,EAAS,WAAaA,EAAS,WAAaF,EAAU,IAAM,KAAO,WACtEE,EAVT,wBAAQvB,QAAS,kBAAMoB,EAASH,MAAM,GAAGC,KAAK,QAA9C,wBAUkC,UEpCpCP,EAAS,CACXG,WAAY,SACZV,QAAS,OACTS,cAAe,UAKJmB,EAFH,kBAAM,cAAC,EAAD,CAAMrB,OAAQA,KCJhCsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.252ff5e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst style = {\r\n    background: 'lightblue',\r\n    border: '2px solid green',\r\n    fontSize: '30px',\r\n    fontWeight: '800',\r\n    cursor: 'pointer',\r\n    outline: 'none'\r\n};\r\n\r\nconst Square = ({ value, onClick }) => (\r\n    <button style={style} onClick={onClick}>\r\n        {value}\r\n    </button>\r\n);\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst style = {\r\n    border: '4px solid green',\r\n    borderRadius: '10px',\r\n    width: '250px',\r\n    height: '250px',\r\n    display: 'grid',\r\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\r\n}\r\nconst Board = ({ squares, onClick }) => (\r\n    <div style={style}>\r\n        {squares.map((square, i) => (\r\n            <Square key={i} value={square} onClick={() => onClick(i)} />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default Board;","import React, { useState } from 'react';\r\nimport Board from './Board';\r\nimport { calculateWinner } from '../helpers';\r\n\r\nconst styles = {\r\n    width: '200px',\r\n    margin: '20px auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n};\r\n\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const winner = calculateWinner(board);\r\n\r\n    const handleClick = i => {\r\n        const boardCopy = [...board];\r\n        //If user clicks on ocupied square or if game is won\r\n        if (winner || boardCopy[i]) return;\r\n        //Put an X or an O on clicked square\r\n        boardCopy[i] = xIsNext ? 'X' : 'O';\r\n        setBoard(boardCopy);\r\n        setXisNext(!xIsNext);\r\n    }\r\n\r\n    const renderMoves = () => (\r\n        <button onClick={() => setBoard(Array(9).fill(null))}>\r\n            Start Game\r\n        </button>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Board squares={board} onClick={handleClick} />\r\n            <div style={styles}>\r\n                <p>{winner ? 'Winner: ' + winner : 'Player ' + (xIsNext ? 'X' : 'O') + ' moves'}</p>\r\n                {winner ? renderMoves() : ''}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Game;","export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n        if (!squares.includes(null)) {\r\n            return 'DRAW';\r\n        }\r\n    }\r\n    return null;\r\n}","import Game from './components/Game';\n\nconst styles = {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column'\n}\n\nconst App = () => <Game styles={styles} />\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}